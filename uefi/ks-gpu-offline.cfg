#WARNING. This configuration shoudn't be used, it is only a backup.



#Generated by Kickstart Configurator
#platform=AMD64 or Intel EM64T

#System language
lang en_US.UTF-8
#Language modules to install
langsupport en_US
#System keyboard
keyboard us
#System mouse
mouse
#System timezone
timezone Asia/Singapore
#Root password
rootpw --iscrypted $6$AqIIRbhH$.MFSaNXH3CIhzv5vQthYf51kvJeZah4dgBHm74adgROT/kwM7jhpAq3gFdagQNnnSO0Gu.Y4gBrY71Z4uG9mI1
#Initial user
user rapiadmin --fullname "Rapiscan system admin" --iscrypted --password $6$AqIIRbhH$.MFSaNXH3CIhzv5vQthYf51kvJeZah4dgBHm74adgROT/kwM7jhpAq3gFdagQNnnSO0Gu.Y4gBrY71Z4uG9mI1
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use CDROM installation media
cdrom
#System bootloader configuration
bootloader --location=mbr 
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
clearpart --all --initlabel 
#Disk partitioning information
part swap --size 1024
part / --fstype xfs --size 1 --grow --asprimary 
part /boot --fstype ext4 --size 256 --asprimary 
#Network config
%include /tmp/network_confgiuration
#System authorization infomation
auth  --useshadow  --enablemd5 
#Firewall configuration
#firewall --disabled
firewall --enabled --ssh 
#Do not configure the X Window System
skipx
#Package install information
%packages
vim
openssh-server
dnsutils 
iproute2 
usbutils 
iputils-ping
curl
net-tools  # this includes commands like ifconfig and netstat
wget
man
tcpdump
make
build-essential
ubuntu-gnome-desktop


%pre
# Reading and setting variables of the installation parameters
# TTY switch
exec < /dev/tty6 > /dev/tty6

# Switch to TTY6
chvt 6
# Clear the console
clear

# Set Keyboard #
loadkeys us

# Requesting hostname #
echo "Please enter Unique Hostname ! "
read hostn
hostname $hostn

# Requesting if Nvidia components such as drivers and containerd runtime should be installed
echo "Do you want Nvidia components to be installed? Please answer yes or no."
read install_nvidia
if [ "${install_nvidia}" = "yes" ]
then
  touch /tmp/install_nvidia
fi

# Requesting network configuration
echo "Please enter IP address. "
read ipaddress
echo "Please enter the network mask in the format xxx.xxx.xxx.xxx"
read netmask
echo "Please enter IP address of the default gateway."
read gateway
echo "Please enter IP address of the nameserver. To specify multiple nameservers, separate them with a comma."
read nameserver
# Preparing a file with all nameservers specified in it.
echo ${nameserver} | tr , "\n" > /tmp/nameserver_list
# Preparing network configuration which will be used alter.
echo "network --device=enp12s0 --bootproto=static --ip=${ipaddress} --netmask=${netmask} --gateway=${gateway} --nameserver=$(head -n 1 /tmp/nameserver_list)" > /tmp/network_confgiuration

#echo "Please enter IP ADDR(feature in dev) ! "
#read ipaddr
#hostname $ipaddr
#echo -e "NETWORKING=yes\nHOSTNAME=$hostn" > /etc/sysconfig/network

# Display the summary #
echo " "
echo " "
echo "-------------------------------------------------"
echo " Installation Summary"
echo "-------------------------------------------------"
echo " "
echo " "
echo "-------------------------------------------------"
echo " Hostname = $hostn"
echo " User name = User Name"
echo " Login = rapiadmin"
echo " Password = R@piscan123"
echo " Login Root = root"
echo " Root Password = R@piscan123"
echo " Distribution = Ubuntu 18.04 LTS"
echo " Installation of Nvidia components = ${install_nvidia}"
echo " "
echo " Netowrk configuration:"
echo " IP = ${ipaddress}"
echo " Netmask = ${netmask}"
echo " Gateway = ${gateway}"
echo " Nameserver = ${nameserver}"
echo "-------------------------------------------------"
echo " "
echo " "
echo "-------------------------------------------------"
echo " Installation will destroy"
echo " all the contents on the disk !"
echo " "
echo " To cancel the installation,"
echo " reboot the machine within 10 seconds!"
echo "--------------------------------------------------"
echo " "
echo " "
sleep 10

# Switch back to TTY1 console
chvt 1
%end

%post --nochroot
# Passing nameserver list from pre step to post.
cp /tmp/nameserver_list /target/tmp/nameserver_list
# Checking if Nvidia components should be installed and passing information about it from pre to post step.
if [ -e /tmp/install_nvidia ]
then
  cp /tmp/install_nvidia /target/tmp/install_nvidia
fi
#Copying all packages to a local fs for further installation.
mkdir /target/tmp/packages/
cp -R /cdrom/packages/* /target/tmp/packages/
%end

%post
# add username to sudoer list
echo "rapiadmin ALL=(ALL)    ALL" >> /etc/sudoers

# Adding all DNS servers specified by a user to /etc/netplan/01-netcfg.yaml file.

if [ $(wc -l < /tmp/nameserver_list) -gt 1 ]
then
    for index in 2 $(wc -l < /tmp/nameserver_list)
    do
      cat /tmp/nameserver_list | sed -n "${index}p" | sed 's/.*/              - \"&\"/' >> /etc/netplan/01-netcfg.yaml
    done
fi

# TODO: Install all the software here
apt update

#Installing Chromium
dpkg -i /tmp/packages/chromium/*.deb

if [ -e /tmp/install_nvidia ]
then
  dpkg -i /tmp/packages/nvidia/*.deb
  dpkg -i /tmp/packages/nvidia-runtime/*.deb
fi

%end
## END ##